==========
Empty line
==========

---
(program)

==========
Lines of whitespace without content
==========
 
	
;
---
(program)

==========
Instruction with comma-separated operands
==========
li $t0,1
---
(program
  (instruction
    (opcode)
    (operands
      (register)
      (decimal))))

==========
Instruction with commas and space-separated
==========
li $t0 , 1
---
(program
  (instruction
    (opcode)
    (operands
      (register)
      (decimal))))

==========
Instruction with commas and tab-separated
==========
li	$t0	,	1
---
(program
  (instruction
    (opcode)
    (operands
      (register)
      (decimal))))

==========
Instruction with space-separated operands
==========
li $t0 1
---
(program
  (instruction
    (opcode)
    (operands
      (register)
      (decimal))))

==========
Instruction with tab-separated operands
==========
li	$t0	1
---
(program
  (instruction
    (opcode)
    (operands
      (register)
      (decimal))))

==========
Basic label
==========
test:
---
(program
  (label))

==========
Chained label without space
==========
test:test:
---
(program
  (label)
  (label))

==========
Chained label with space
==========
test: test:
---
(program
  (label)
  (label))

==========
Chained label with tab
==========
test:	test:
---
(program
  (label)
  (label))

==========
Combined label and instruction without space
==========
test:nop
---
(program
  (label)
  (instruction
    (opcode)))

==========
Combined label and instruction with space
==========
test: nop
---
(program
  (label)
  (instruction
    (opcode)))

==========
Combined label and instruction with tab
==========
test:	nop
---
(program
  (label)
  (instruction
    (opcode)))

==========
Combined label and directive without space
==========
test:.text
---
(program
  (label)
  (directive
    (control_mnemonic)))

==========
Combined label and directive with space
==========
test: .text
---
(program
  (label)
  (directive
    (control_mnemonic)))

==========
Combined label and directive with tab
==========
test:	.text
---
(program
  (label)
  (directive
    (control_mnemonic)))

==========
Directive with space in assignment
==========
.set test = 123
---
(program
  (directive
    (control_mnemonic)
    (control_operands
      (binary_expression
        (symbol)
        (decimal)))))

==========
Directive with tabs in assignment
==========
.set test	=	123
---
(program
  (directive
    (control_mnemonic)
    (control_operands
      (binary_expression
        (symbol)
        (decimal)))))

==========
Label with leading space
==========
  test:
---
(program
  (label))

==========
Label with leading tab
==========
	test:
---
(program
  (label))

==========
Label with trailing space
==========
test:  
---
(program
  (label))

==========
Label with trailing tab
==========
test:	
---
(program
  (label))

==========
Instruction without operands with leading space
==========
  nop
---
(program
  (instruction
    (opcode)))

==========
Instruction without operands with leading tab
==========
	nop
---
(program
  (instruction
    (opcode)))

=========
Instruction without operands with trailing space
==========
nop  
---
(program
  (instruction
    (opcode)))

==========
Instruction without operands with trailing tab
==========
nop	
---
(program
  (instruction
    (opcode)))

==========
Instruction with operands with leading space
==========
  jr $t0
---
(program
  (instruction
    (opcode)
    (operands
      (register))))

==========
Instruction with operands with leading tab
==========
	jr $t0
---
(program
  (instruction
    (opcode)
    (operands
      (register))))

==========
Instruction with operands with trailing space
==========
jr $t0  
---
(program
  (instruction
    (opcode)
    (operands
      (register))))

==========
Instruction with operands with trailing tab
==========
jr $t0	
---
(program
  (instruction
    (opcode)
    (operands
      (register))))

==========
Directive without attributes with leading space
==========
  .text
---
(program
  (directive
    (control_mnemonic)))

==========
Directive without attributes with leading tab
==========
	.text
---
(program
  (directive
    (control_mnemonic)))

==========
Directive without attributes with trailing space
==========
.text  
---
(program
  (directive
    (control_mnemonic)))

==========
Directive without attributes with trailing tab
==========
.text	
---
(program
  (directive
    (control_mnemonic)))

==========
Directive with attributes with leading space
==========
  .word 123
---
(program
  (directive
    (integer_mnemonic)
    (integer_operands
      (decimal))))

==========
Directive with attributes with leading tab
==========
	.word 123
---
(program
  (directive
    (integer_mnemonic)
    (integer_operands
      (decimal))))

==========
Directive with attributes with trailing space
==========
.word 123  
---
(program
  (directive
    (integer_mnemonic)
    (integer_operands
      (decimal))))

==========
Directive with attributes with trailing tab
==========
.word 123	
---
(program
  (directive
    (integer_mnemonic)
    (integer_operands
      (decimal))))

==========
Label with semicolon
==========
test:;
---
(program
  (label))

==========
Label with space before semicolon
==========
test: ;
---
(program
  (label))

==========
Instruction without operands with semicolon
==========
nop;
---
(program
  (instruction
    (opcode)))

==========
Instruction without operands with space before semicolon
==========
nop ;
---
(program
  (instruction
    (opcode)))

==========
Instruction with operands with semicolon
==========
jr $t0;
---
(program
  (instruction
    (opcode)
    (operands
      (register))))

==========
Instruction with operands with space before semicolon
==========
jr $t0 ;
---
(program
  (instruction
    (opcode)
    (operands
      (register))))

==========
Directive without attributes with semicolon
==========
.text;
---
(program
  (directive
    (control_mnemonic)))

==========
Directive without attributes with space before semicolon
==========
.text ;
---
(program
  (directive
    (control_mnemonic)))

==========
Directive with attributes with semicolon
==========
.word 123;
---
(program
  (directive
    (integer_mnemonic)
    (integer_operands
      (decimal))))

==========
Directive with attributes with space before semicolon
==========
.word 123 ;
---
(program
  (directive
    (integer_mnemonic)
    (integer_operands
      (decimal))))

==========
Instruction opcode separated with comma from arguments
:error
==========
li,$t0,1
---

==========
Instruction opcode separated with comma and spaces from arguments
:error
==========
li , $t0, 1
---

==========
Number without context
:error
==========
123
---

==========
String without context
:error
==========
123
---

==========
Register without context
:error
==========
$t0
---

==========
Register on new line after opcode
:error
==========
li 
    $t0, 1
---
