==========
[instructions/macro] multiple macro variables with percent (%) prefic separated with space
==========
foo %bar %baz
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (macro_variable)
      (macro_variable))))

==========
[instructions/macro] multiple macro variables with percent (%) prefic separated with tab
==========
foo %bar	%baz
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (macro_variable)
      (macro_variable))))

==========
[instructions/macro] multiple macro variables with percent (%) prefic separated with comma
==========
foo %bar,%baz
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (macro_variable)
      (macro_variable))))

==========
[instructions/macro] multiple macro variables with backslash (\) prefic separated with space
==========
foo \bar \baz
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (macro_variable)
      (macro_variable))))

==========
[instructions/macro] multiple macro variables with backslash (\) prefic separated with tab
==========
foo \bar	\baz
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (macro_variable)
      (macro_variable))))

==========
[instructions/macro] multiple macro variables with backslash (\) prefic separated with comma
==========
foo \bar,\baz
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (macro_variable)
      (macro_variable))))

==========
[instructions/macro] multiple macro variables with dollar ($) prefic separated with space
==========
foo $bar $baz
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (macro_variable)
      (macro_variable))))

==========
[instructions/macro] multiple macro variables with dollar ($) prefic separated with tab
==========
foo $bar	$baz
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (macro_variable)
      (macro_variable))))

==========
[instructions/macro] multiple macro variables with dollar ($) prefic separated with comma
==========
foo $bar,$baz
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (macro_variable)
      (macro_variable))))

==========
[instructions/macro] mixed prefixes in instruction
==========
foo $\ $% \$ \% %$ $\
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (macro_variable)
      (macro_variable)
      (macro_variable)
      (macro_variable)
      (macro_variable)
      (macro_variable))))

==========
[instructions/macro] address with macro_variable as register with percent (%) prefix
==========
foo 4(%x)
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (address
        offset: (decimal)
        base: (macro_variable)))))

==========
[instructions/macro] address with macro_variable as register with backslash (\) prefix
==========
foo 4(\x)
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (address
        offset: (decimal)
        base: (macro_variable)))))

==========
[instructions/macro] address with macro_variable as register with dollar ($) prefix
==========
foo 4($x)
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (address
        offset: (decimal)
        base: (macro_variable)))))

==========
[instructions/macro] macro call with string
==========
foo("bar")
---

(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (string))))
