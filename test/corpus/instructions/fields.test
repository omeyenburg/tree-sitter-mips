==========
[instructions/fields] basic instruction
==========
foo
---
(program
  (instruction
    opcode: (opcode)))

==========
[instructions/fields] address
==========
foo ($s0)
---
(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (address
        base: (register)))))

==========
[instructions/fields] address with offset
==========
foo -10($s0)
---
(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (address
        offset: (decimal)
        base: (register)))))

==========
[instructions/fields] address with label and offset
==========
foo bar-10($s0)
---
(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (binary_expression
        left: (symbol)
        right: (address
          offset: (decimal)
          base: (register))))))

==========
[instructions/fields] simple expression
==========
foo bar+4
---
(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (binary_expression
        left: (symbol)
        right: (decimal)))))

==========
[instructions/fields] parenthesized expression
==========
foo (bar+4)
---
(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (parenthesized_expression
        argument: (binary_expression
          left: (symbol)
          right: (decimal))))))

==========
[instructions/fields] unary expression
==========
foo -bar
---
(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (unary_expression
        argument: (symbol)))))

==========
[instructions/fields] call expression
==========
foo(bar, baz)
---
(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (symbol)
      (symbol))))
