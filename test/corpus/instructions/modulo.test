==========
[instructions/modulo] instruction with modulo expression without spaces
==========
foo $t0 4%2
---
(program
  (instruction
    (opcode)
    (operands
      (register)
      (binary_expression
        (decimal)
        (decimal)))))

==========
[instructions/modulo] instruction with modulo expression with space after operator
==========
foo $t0 4%2
---
(program
  (instruction
    (opcode)
    (operands
      (register)
      (binary_expression
        (decimal)
        (decimal)))))

==========
[instructions/modulo] instruction with modulo expression with space after operator
==========
foo $t0 4% 2
---
(program
  (instruction
    (opcode)
    (operands
      (register)
      (binary_expression
        (decimal)
        (decimal)))))

==========
[instructions/modulo] instruction with modulo expression with spaces around operator (edge case with special treatment using extra node)
==========
foo $t0 4 % 2
---
(program
  (instruction
    (opcode)
    (operands
      (register)
      (decimal)
      (modulo_operator)
      (decimal))))

==========
[instructions/modulo] instruction with modulo expression without spaces between decimal and macro variable
==========
foo $t0 4%%2
---
(program
  (instruction
    (opcode)
    (operands
      (register)
      (binary_expression
        (decimal)
        (macro_variable)))))

==========
[instructions/modulo] instruction without parenthesized modulo expression
==========
foo $t0 (4 % 2)
---
(program
  (instruction
    (opcode)
    (operands
      (register)
      (parenthesized_expression
        (binary_expression
          (decimal)
          (decimal))))))

==========
[instructions/modulo] instruction without modulo expression and macro variable instead
==========
foo 4 %2
---
(program
  (instruction
    (opcode)
    (operands
      (decimal)
      (macro_variable))))

==========
[instructions/modulo] instruction without modulo expression and two macro variables instead
==========
foo %4 %2
---
(program
  (instruction
    (opcode)
    (operands
      (macro_variable)
      (macro_variable))))
