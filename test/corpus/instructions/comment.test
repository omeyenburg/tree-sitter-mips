==========
[instructions/comment] inline comment after opcode without space
==========
foo# bar
---
(program
  (instruction
    (opcode))
  (line_comment))

==========
[instructions/comment] inline C style comment after opcode without space
==========
foo// bar
---
(program
  (instruction
    (opcode))
  (line_comment))

==========
[instructions/comment] inline C style block comment after opcode without space
==========
foo/* bar */
---
(program
  (instruction
    (opcode))
  (block_comment))

==========
[instructions/comment] inline comment after opcode with space
==========
foo # bar
---
(program
  (instruction
    (opcode))
  (line_comment))

==========
[instructions/comment] inline C style comment after opcode with space
==========
foo // bar
---
(program
  (instruction
    (opcode))
  (line_comment))

==========
[instructions/comment] inline C style block comment after opcode with space
==========
foo /* bar */
---
(program
  (instruction
    (opcode))
  (block_comment))

==========
[instructions/comment] inline comment after operands without space
==========
foo $t0# bar
---
(program
  (instruction
    (opcode)
    (operands
      (register)))
  (line_comment))

==========
[instructions/comment] inline C style comment after operands without space
==========
foo $t0// bar
---
(program
  (instruction
    (opcode)
    (operands
      (register)))
  (line_comment))

==========
[instructions/comment] inline C style block comment after operands without space
==========
foo $t0/* bar */
---
(program
  (instruction
    (opcode)
    (operands
      (register)))
  (block_comment))

==========
[instructions/comment] inline comment after operands with space
==========
foo $t0 # bar
---
(program
  (instruction
    (opcode)
    (operands
      (register)))
  (line_comment))

==========
[instructions/comment] inline C style comment after operands with space
==========
foo $t0 // bar
---
(program
  (instruction
    (opcode)
    (operands
      (register)))
  (line_comment))

==========
[instructions/comment] inline C style block comment after operands with space
==========
foo $t0 /* bar */
---
(program
  (instruction
    (opcode)
    (operands
      (register)))
  (block_comment))

==========
[instructions/comment] C style block comment between opcode and operands without space
==========
foo/* bar */$t0
---
(program
  (instruction
    (opcode)
    (block_comment)
    (operands
      (register))))

==========
[instructions/comment] C style block comment between opcode and operands with space before
==========
foo /* bar */$t0
---
(program
  (instruction
    (opcode)
    (block_comment)
    (operands
      (register))))

==========
[instructions/comment] C style block comment between opcode and operands with space after
==========
foo/* bar */ $t0
---
(program
  (instruction
    (opcode)
    (block_comment)
    (operands
      (register))))

==========
[instructions/comment] call expression with C style block comment after opcode
==========
foo/* bar */(1, 2)
---
(program
  (instruction
    opcode: (opcode)
    (block_comment)
    operands: (operands
      (decimal)
      (decimal))))

==========
[instructions/comment] call expression with C style block comment before operands
==========
foo(/* bar */1, 2)
---
(program
  (instruction
    opcode: (opcode)
    (block_comment)
    operands: (operands
      (decimal)
      (decimal))))

==========
[instructions/comment] call expression with C style block comment after operands
==========
foo(1, 2/* baz */)
---
(program
  (instruction
    opcode: (opcode)
    operands: (operands
      (decimal)
      (decimal))
    (block_comment)))
