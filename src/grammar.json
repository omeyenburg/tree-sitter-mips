{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "mips",
  "rules": {
    "source_file": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_statement"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "STRING",
                        "value": "\n"
                      },
                      {
                        "type": "STRING",
                        "value": ";"
                      }
                    ]
                  },
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "SYMBOL",
                        "name": "_statement"
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "type": "BLANK"
        }
      ]
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "directive"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "label"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "PATTERN",
                      "value": "[\\s\\t]+"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_statement"
                    }
                  ]
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "instruction"
        },
        {
          "type": "SYMBOL",
          "name": "macro"
        }
      ]
    },
    "directive": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "meta"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "PATTERN",
                  "value": "[\\s\\t]+"
                },
                {
                  "type": "SYMBOL",
                  "name": "attributes"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "meta": {
      "type": "PATTERN",
      "value": "[.][a-z_]+"
    },
    "attributes": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_number"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "PATTERN",
          "value": "[^\\n\"#0-9]+"
        }
      ]
    },
    "macro": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[a-zA-Z_]+\\(.*\\)"
      }
    },
    "_identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "label": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*:"
    },
    "instruction": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "opcode"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "operands"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "opcode": {
      "type": "PATTERN",
      "value": "[a-z][a-z.]*"
    },
    "operands": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_operand"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "_operand"
              }
            ]
          }
        }
      ]
    },
    "_operand": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "register"
        },
        {
          "type": "SYMBOL",
          "name": "macro_variable"
        },
        {
          "type": "SYMBOL",
          "name": "_number"
        },
        {
          "type": "SYMBOL",
          "name": "address"
        }
      ]
    },
    "macro_variable": {
      "type": "PATTERN",
      "value": "[%\\\\][0-9a-zA-Z_:$%\\\\]+"
    },
    "_number": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "char"
        },
        {
          "type": "SYMBOL",
          "name": "octal"
        },
        {
          "type": "SYMBOL",
          "name": "decimal"
        },
        {
          "type": "SYMBOL",
          "name": "hexadecimal"
        },
        {
          "type": "SYMBOL",
          "name": "float"
        }
      ]
    },
    "address": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_identifier"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "_identifier"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_char"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_octal"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_decimal"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_hexadecimal"
                    }
                  ]
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "_register"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "_char": {
      "type": "PATTERN",
      "value": "'[^']'"
    },
    "_string": {
      "type": "PATTERN",
      "value": "\"[^\"]*\""
    },
    "_octal": {
      "type": "PATTERN",
      "value": "-?0[0-7]*"
    },
    "_decimal": {
      "type": "PATTERN",
      "value": "-?\\d+"
    },
    "_hexadecimal": {
      "type": "PATTERN",
      "value": "-?0[xX][0-9a-fA-F]+"
    },
    "_float": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "PATTERN",
                  "value": "-?\\d+\\.?\\d*"
                },
                {
                  "type": "PATTERN",
                  "value": "-?\\d*\\.\\d+"
                }
              ]
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "PATTERN",
                  "value": "[eE]-?\\d+"
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        },
        {
          "type": "PATTERN",
          "value": "-?\\d+[eE]-?\\d+"
        }
      ]
    },
    "_register": {
      "type": "PATTERN",
      "value": "[$][0-9a-z]+"
    },
    "char": {
      "type": "SYMBOL",
      "name": "_char"
    },
    "string": {
      "type": "SYMBOL",
      "name": "_string"
    },
    "octal": {
      "type": "SYMBOL",
      "name": "_octal"
    },
    "decimal": {
      "type": "SYMBOL",
      "name": "_decimal"
    },
    "hexadecimal": {
      "type": "SYMBOL",
      "name": "_hexadecimal"
    },
    "float": {
      "type": "SYMBOL",
      "name": "_float"
    },
    "register": {
      "type": "SYMBOL",
      "name": "_register"
    },
    "line_comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "#"
          },
          {
            "type": "PATTERN",
            "value": ".*"
          }
        ]
      }
    },
    "block_comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "/*"
          },
          {
            "type": "PATTERN",
            "value": "[^*]*\\*+([^/*][^*]*\\*+)*"
          },
          {
            "type": "STRING",
            "value": "*/"
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s|\\t"
    },
    {
      "type": "SYMBOL",
      "name": "line_comment"
    },
    {
      "type": "SYMBOL",
      "name": "block_comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
